#!/bin/sh

set -e

RUBY='ruby1.8'

run_unit_tests=false
run_integration_tests=false
run_version_check_tests=false
which_tests="$1"
case "$which_tests" in
  unit|integration|version_check)
    eval "run_${which_tests}_tests=true"
    ;;
  '')
    run_unit_tests=true
    run_integration_tests=true
    run_version_check_tests=true
    ;;
  *)
    echo "usage: $0 [unit|integration|version_check]"
    exit 1
    ;;
esac

run_tests() {
  echo $RUBY -Ilib:test test/loader.rb $@
  $RUBY -Ilib:test test/loader.rb $@
}

maybe_check_version_number() {
  if test $run_version_check_tests != true; then
    return
  fi
  code_version=$(ruby -Ilib -rgem2deb -e 'puts Gem2Deb::VERSION')
  debian_version=$(dpkg-parsechangelog | grep '^Version: ' | cut -d ' ' -f 2)
  if test "$code_version" != "debian_version"; then
    msg="W: Inconsistent version numbers: lib/gem2deb.rb says ${code_version}, debian/changelog says ${debian_version}"
    if test -t 0 && test -t 1 && test -t 2; then
      printf "\033[31;40m${msg}\033[m\n"
    else
      printf "$msg\n"
    fi
  fi
}

maybe_run_unit_tests() {
  if test $run_unit_tests = true; then
    echo "Running unit tests"
    run_tests test/unit/*_test.rb
  fi
}
maybe_run_integration_tests() {
  if test $run_integration_tests = true; then
    echo "Running integration tests"
    run_tests test/integration/*_test.rb
  fi
}

maybe_check_version_number
maybe_run_unit_tests
maybe_run_integration_tests
